source('D:/Users/earmmor/GitHub/glider/jobs_code/calc_adoption_curves.R', echo=TRUE)
arch <- readRDS("../jobs_data/archetype_summary_retrofitopts.Rds")
comb <- readRDS("../jobs_data/combined_2013_arch.Rds")
retro.ops <- read.csv("../jobs_data/retrofit_options.csv")
years <- as.character(2013:2050)
retro.ops[years] <- 0
retro.ops$k <- 0
retro.ops$x0 <- 0
retro.ops$'2013'[retro.ops$Measure == "Internal Solid Wall Insulation"] <- sum(comb$aagpd1213[comb$wallinsy == "solid with insulation"])/2
retro.ops$'2013'[retro.ops$Measure == "External Solid Wall Insulation"] <- sum(comb$aagpd1213[comb$wallinsy == "solid with insulation"])/2
retro.ops$'2050'[retro.ops$Measure == "Internal Solid Wall Insulation"] <- sum(comb$aagpd1213[comb$wallinsy %in% c("solid with insulation", "solid uninsulated","other") ])/2
retro.ops$'2050'[retro.ops$Measure == "External Solid Wall Insulation"] <- sum(comb$aagpd1213[comb$wallinsy %in% c("solid with insulation", "solid uninsulated","other") ])/2
retro.ops$'2013'[retro.ops$Measure == "Cavity Wall Insulation"] <- sum(comb$aagpd1213[comb$wallinsy == "cavity with insulation"])
retro.ops$'2050'[retro.ops$Measure == "Cavity Wall Insulation"] <- sum(comb$aagpd1213[comb$wallinsy %in% c("cavity with insulation", "cavity uninsulated") ])
retro.ops$'2013'[retro.ops$Measure == "Loft Insulation"] <- sum(comb$aagpd1213[comb$LoftIns == "Well Insulated" & comb$rooftyp == "A" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2050'[retro.ops$Measure == "Loft Insulation"] <- sum(comb$aagpd1213[comb$LoftIns %in% c("Poorly Insulated","Well Insulated","No Insulation") & comb$rooftyp == "A" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2013'[retro.ops$Measure == "Room in roof insulation"] <- sum(comb$aagpd1213[comb$LoftIns == "Well Insulated" & comb$rooftyp == "B" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2050'[retro.ops$Measure == "Room in roof insulation"] <- sum(comb$aagpd1213[comb$LoftIns %in% c("Poorly Insulated","Well Insulated","No Insulation") & comb$rooftyp == "B" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2013'[retro.ops$Measure == "Flat roof insulation"] <- sum(comb$aagpd1213[comb$LoftIns == "Well Insulated" & comb$rooftyp == "C" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2050'[retro.ops$Measure == "Floor Insulation Solid"] <- sum(comb$aagpd1213[comb$floortyp == "A" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2013'[retro.ops$Measure == "Floor Insulation Solid"] <- sum(comb$aagpd1213[comb$floortyp == "A" & comb$generaltyp %in% c("A","B","C","F")])/100 #No data assume 1% uptake
retro.ops$'2050'[retro.ops$Measure == "Flat roof insulation"] <- sum(comb$aagpd1213[comb$LoftIns %in% c("Poorly Insulated","Well Insulated","No Insulation") & comb$rooftyp == "C" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2050'[retro.ops$Measure == "Floor Insulation Suspended"] <- sum(comb$aagpd1213[comb$floortyp == "B" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2013'[retro.ops$Measure == "Floor Insulation Suspended"] <- sum(comb$aagpd1213[comb$floortyp == "B" & comb$generaltyp %in% c("A","B","C","F")])/100 #not data so assume 1% uptake
retro.ops$'2013'[retro.ops$Measure == "new or replacement windows"] <- sum(comb$aagpd1213[comb$floortyp == "A" & comb$winage == "0 -10 years"])
retro.ops$'2050'[retro.ops$Measure == "new or replacement windows"] <- sum(comb$aagpd1213)
retro.ops$'2013'[retro.ops$Measure == "solar photovoltaics"] <- sum(comb$aagpd1213[comb$solartyp == "A" & comb$PV == "Yes" & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2050'[retro.ops$Measure == "solar photovoltaics"] <- sum(comb$aagpd1213[comb$solartyp == "A" & comb$PV %in% c("Yes","No") & comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2013'[retro.ops$Measure == "solar water heating"] <- sum(comb$aagpd1213[comb$solartyp == "A" &
comb$Solar == "Yes" &
comb$energytyp %in% c("B","C","E") &
comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2050'[retro.ops$Measure == "solar water heating"] <- sum(comb$aagpd1213[comb$solartyp == "A" &
comb$Solar %in% c("Yes","No") &
comb$energytyp %in% c("B","C","E") &
comb$generaltyp %in% c("A","B","C","F")])
retro.ops$'2013'[retro.ops$Measure == "heating controls"] <- sum(comb$aagpd1213[comb$control == 7])
retro.ops$'2050'[retro.ops$Measure == "heating controls"] <- sum(comb$aagpd1213) # All dwellings need some from of heating controls
retro.ops$'2013'[retro.ops$Measure == "air source heat pump"] <- 1000 # no data so assume 1000
retro.ops$'2050'[retro.ops$Measure == "air source heat pump"] <- sum(comb$aagpd1213) * 0.3
retro.ops$'2013'[retro.ops$Measure == "ground source heat pump"] <- 1000 # no data so assume 1000
retro.ops$'2050'[retro.ops$Measure == "ground source heat pump"] <- sum(comb$aagpd1213) * 0.1
retro.ops$'2013'[retro.ops$Measure == "district heating connection"] <- sum(comb$aagpd1213[comb$energytyp == "G"]) # communal heating not quite the same a distric heating
retro.ops$'2050'[retro.ops$Measure == "district heating connection"] <- sum(comb$aagpd1213) * 0.07
retro.ops$'2013'[retro.ops$Measure == "Boiler replacements"] <- sum(comb$aagpd1213[comb$energytyp %in% c("A","B","C","H")])
retro.ops$'2050'[retro.ops$Measure == "Boiler replacements"] <- sum(comb$aagpd1213) * 0.46
retro.ops$'2013'[retro.ops$Measure == "Electric storage heater replacement"] <- sum(comb$aagpd1213[comb$energytyp == "D"]) #storage heater not quite the same as resistive
retro.ops$'2050'[retro.ops$Measure == "Electric storage heater replacement"] <- sum(comb$aagpd1213) * 0.07
retro.ops$'2013'[retro.ops$Measure == "Hot water cylinder insulation"] <- sum(comb$aagpd1213[comb$tankins == "Well Insulated" ])
retro.ops$'2050'[retro.ops$Measure == "Hot water cylinder insulation"] <- sum(comb$aagpd1213[comb$tankins %in% c("Poorly Insulated","No Insulation","Well Insulated") ])
cal.uptake <- function(L,k,x,x0){
res <- L / (1 + (exp(1) ** (-k * (x - x0) )))
return(res)
}
cal.downtake <- function(L,k,x,x0){
res <- L / (1 + (exp(1) ** (k * (x - x0) )))
return(res)
}
get.uptake <- function(measure){
#http://www.clear-lines.com/blog/post/S-shaped-market-adoption-curve.aspx
rownumb <- which(retro.ops$Measure == measure)
L <- retro.ops[rownumb,"2050"]
y2013 <- retro.ops[rownumb,"2013"]
k <- (log(L/y2013 - 1) - log(L/(0.99*L) - 1))/(2050 - 2013)
x0 <- log(L/y2013 - 1)/k + 2013
message(measure," ",round(x0,2)," ",round(k,2))
for(i in 2014:2049){
sub <- round(cal.uptake(L,k,x = i,x0),0)
if(i == 2014){
res <- sub
}else{
res <- c(res,sub)
}
}
#Bind 2050, k , x0 on to the end
res <- c(res,L,k,x0)
return(res)
}
linear.uptake <- function(measure){
rownumb <- which(retro.ops$Measure == measure)
L <- retro.ops[rownumb,"2050"]
y2013 <- retro.ops[rownumb,"2013"]
diff <- (L - y2013)/(2050 - 2013)
res <- list()
for(i in 2014:2049){
if(i == 2014){
res[[i]] <- round(y2013 + diff,0)
}else{
sub <- round(res[[i-1]] + diff,0)
if(sub > L){
res[[i]] <- L
}else{
res[[i]] <- sub
}
}
}
res <- unlist(res)
res <- c(res,L,NA,NA)
return(res)
}
neg.scurve <- function(measure){
#http://www.clear-lines.com/blog/post/S-shaped-market-adoption-curve.aspx
rownumb <- which(retro.ops$Measure == measure)
L <- retro.ops[rownumb,"2013"]
y2013 <- retro.ops[rownumb,"2050"]
k <- (log(L/y2013 - 1) - log(L/(0.99*L) - 1))/(2050 - 2013)
x0 <- log(L/y2013 - 1)/k + 2050
message(measure," ",round(x0,2)," ",round(k,2))
for(i in 2014:2049){
sub <- round(cal.downtake(L,k,x = i,x0),0)
if(i == 2014){
res <- sub
}else{
res <- c(res,sub)
}
}
#Bind 2050, k , x0 on to the end
res <- c(res,y2013,k,x0)
return(res)
}
for(i in 1:nrow(retro.ops)){
measure <- retro.ops$Measure[i]
method <- retro.ops$Model[i]
if(method == "scurve"){
retro.ops[retro.ops$Measure == measure, c(years[2:38],"k","x0") ] <- get.uptake(measure)
}else if(method == "linear"){
retro.ops[retro.ops$Measure == measure, c(years[2:38],"k","x0") ] <- linear.uptake(measure)
}else if(method == "negcurve"){
retro.ops[retro.ops$Measure == measure, c(years[2:38],"k","x0") ] <- neg.scurve(measure)
}
}
boiler.vals <- c(19417213, 19328446,	19325990,	19318648,	19305860,	19287005,	19261401,	19228300,	19186889,	19136279,	19075513,	19003558,
18919310,	18821596,	18709184,	18580785,	18435075,	18270706,	18086334,	17880645,	17652388,	17400420,	17123746,	16821569,
16493349,	16138852,	15758205,	15351943,	14921051,	14466988,	13991703,	13497627,	12987642,	12465034,	11933426,	11396682,	10858810,	10696739)
retro.ops[retro.ops$Measure == "Boiler replacements", years[1:38] ] <- boiler.vals
foo <- retro.ops[retro.ops$'2014' != 0,c("Measure",years)]
df <- melt(foo)#the function melt reshapes it from wide to long
df$Measure <- NULL
df$rowid <- foo$Measure  #add a rowid identifying variable
head(df)
ggplot(df, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid)), size = 2)
rates.df <- retro.ops[,1:3]
for(j in 2:38){
rt <- retro.ops[,years[j]] - retro.ops[,years[j-1]]
rates.df[,years[j]] <- rt
}
foo2 <- rates.df[rates.df$'2014' != 0,c("Measure",years[2:38])]
df <- melt(foo2)#the function melt reshapes it from wide to long
df$Measure <- NULL
df$rowid <- foo$Measure  #add a rowid identifying variable
head(df)
ggplot(df, aes(variable, value, group=factor(rowid))) + geom_line(aes(color=factor(rowid)), size = 2)
saveRDS(df,"../twitter_data/refrofit_rates.Rds")
rates <- readRDS("../jobs_data/refrofit_rates.Rds")
View(rates)
source('D:/Users/earmmor/GitHub/glider/jobs_code/calc_adoption_curves.R', echo=TRUE)
source('D:/Users/earmmor/GitHub/glider/jobs_code/calc_adoption_curves.R', echo=TRUE)
View(rates.df)
rates <- readRDS("../jobs_data/refrofit_rates.Rds")
devtools::install_github("virgesmith/humanleague")
library(humanleague)
?humanleague
ageByGender = array(c(1,2,5,3,4,3,4,5,1,2), dim=c(5,2))
ageByEthnicity = array(c(4,6,5,6,4,5), dim=c(3,2))
View(ageByEthnicity)
View(ageByGender)
seed = array(rep(1,30), dim=c(5,2,3))
result = qisi(seed, list(c(1,2), c(3,2)), list(ageByGender, ageByEthnicity))
r1 <- result[[1]]
r1 <- result[[1]]
r1 <- result[[1]]
r2 <- result[[2]]
r3 <- result[[3]]
r4 <- result[[4]]
r5 <- result[[5]]
r6 <- result[[6]]
res = qisi(seed, list(c(1,2), c(3,2)), list(ageByGender, ageByEthnicity))
result <- res$result
expectation <- res$expectation
conv <- res$conv
pop <- res$pop
chiSq <- res$chiSq
pValue <- res$pValue
rm(r1,r2,r3,r4,r5,r6)
class(result)
View(ageByEthnicity)
arch <- readRDS("../jobs_data/archetype_summary_retrofitopts.Rds")
comb <- readRDS("../jobs_data/combined_2013_arch.Rds")
retro.ops <- read.csv("../jobs_data/retrofit_options.csv")
View(arch)
View(comb)
length(unique(comb$GorEHCS))
length(unique(comb$LoftIns))
length(unique(comb$winage))
length(unique(comb$imd))
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","aadgp1213")]
names(comb.sub)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","aagpd1213")]
View(comb.sub)
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
mda <- tapply(X = comb.sub[["aagpd1213"]], INDEX = comb.sub[setdiff(names(comb.sub), "aagpd1213")], FUN = identity)
class(mda)
head(mda)
class(comb.sub$archcode)
comb.sub$archcode <- as.factor(comb.sub$archcode)
archcodes <- levels(comb.sub$archcode)
archcodes
comb.sub$archcode <- as.numeric(comb.sub$archcode)
comb.sub$archcode
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
comb.sub$archcode
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
comb.sub$archcode
comb.sub$archcode <- as.factor(comb.sub$archcode)
archcodes <- levels(comb.sub$archcode)
archcodes
comb.sub$archcode <- as.numeric(comb.sub$archcode)
comb.sub$archcode
comb.sub$archcode <- as.factor(comb.sub$archcode)
archcodes <- levels(comb.sub$archcode)
archcodes
comb.sub$archcode <- as.numeric(comb.sub$archcode)
comb.sub$wallinsy <- as.factor(comb.sub$wallinsy)
wallinsy <- levels(comb.sub$wallinsy)
wallinsy
comb.sub$wallinsy <- as.numeric(comb.sub$wallinsy)
comb.sub$winage <- as.factor(comb.sub$winage)
winage <- levels(comb.sub$winage)
winage
comb.sub$winage <- as.numeric(comb.sub$winage)
comb.sub$arnatx <- as.factor(comb.sub$arnatx)
arnatx <- levels(comb.sub$arnatx)
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
comb.sub$archcode <- as.factor(comb.sub$archcode)
archcodes <- levels(comb.sub$archcode)
archcodes
comb.sub$archcode <- as.numeric(comb.sub$archcode)
comb.sub$wallinsy <- as.factor(comb.sub$wallinsy)
wallinsy <- levels(comb.sub$wallinsy)
wallinsy
comb.sub$wallinsy <- as.numeric(comb.sub$wallinsy)
comb.sub$winage <- as.factor(comb.sub$winage)
winage <- levels(comb.sub$winage)
winage
comb.sub$winage <- as.numeric(comb.sub$winage)
comb.sub$arnatx <- as.factor(comb.sub$arnatx)
arnatx <- levels(comb.sub$arnatx)
arnatx
comb.sub$arnatx <- as.numeric(comb.sub$arnatx)
comb.sub$LoftIns <- as.factor(comb.sub$LoftIns)
LoftIns <- levels(comb.sub$LoftIns)
LoftIns
comb.sub$LoftIns <- as.numeric(comb.sub$LoftIns)
mda <- tapply(X = comb.sub[["aagpd1213"]], INDEX = comb.sub[setdiff(names(comb.sub), "aagpd1213")], FUN = identity)
class(mda)
head(mda)
View(comb.sub)
class(comb.sub$aagpd1213)
mda <- array(NA, c(max(comb.sub$archcode), max(comb.sub$wallinsy), max(comb.sub$winage), max(comb.sub$arnatx), max(comb.sub$LoftIns) ))
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
library(dplyr)
comb.group <- comb.sub %>% group_by(archcode,wallinsy,winage,arnatx,LoftIns) %>% summarise(sum(aagpd1213))
View(comb.group)
sum(comb.group$`sum(aagpd1213)`) == sum(comb.sub$aagpd1213)
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
comb.group <- comb.sub %>% group_by(archcode,wallinsy,winage,arnatx,LoftIns) %>% summarise(sum(aagpd1213))
sum(comb.group$`sum(aagpd1213)`) == sum(comb.sub$aagpd1213)
comb.group$archcode <- as.factor(comb.group$archcode)
archcodes <- levels(comb.group$archcode)
archcodes
comb.group$archcode <- as.numeric(comb.group$archcode)
comb.group$wallinsy <- as.factor(comb.group$wallinsy)
wallinsy <- levels(comb.group$wallinsy)
wallinsy
comb.group$wallinsy <- as.numeric(comb.group$wallinsy)
comb.group$winage <- as.factor(comb.group$winage)
winage <- levels(comb.group$winage)
winage
comb.group$winage <- as.numeric(comb.group$winage)
comb.group$arnatx <- as.factor(comb.group$arnatx)
arnatx <- levels(comb.group$arnatx)
arnatx
comb.group$arnatx <- as.numeric(comb.group$arnatx)
comb.group$LoftIns <- as.factor(comb.group$LoftIns)
LoftIns <- levels(comb.group$LoftIns)
LoftIns
comb.group$LoftIns <- as.numeric(comb.group$LoftIns)
mda <- array(NA, c(max(comb.sub$archcode), max(comb.sub$wallinsy), max(comb.sub$winage), max(comb.sub$arnatx), max(comb.sub$LoftIns) ))
max(comb.sub$archcode)
mda <- array(NA, c(max(comb.group$archcode), max(comb.group$wallinsy), max(comb.group$winage), max(comb.group$arnatx), max(comb.group$LoftIns) ))
for (i in 1:nrow(x)){
mda[comb.group[i,"archcode"], comb.group[i,"wallinsy"], comb.group[i,"winage"], comb.group[i,"arnatx"], comb.group[i,"LoftIns"]] <- comb.group[i, "aagpd1213"]
}
for (i in 1:nrow(comb.group)){
mda[comb.group[i,"archcode"], comb.group[i,"wallinsy"], comb.group[i,"winage"], comb.group[i,"arnatx"], comb.group[i,"LoftIns"]] <- comb.group[i, "aagpd1213"]
}
names(mda)
names(comb.group)
names(comb.group) <- c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")
for (i in 1:nrow(comb.group)){
mda[comb.group[i,"archcode"], comb.group[i,"wallinsy"], comb.group[i,"winage"], comb.group[i,"arnatx"], comb.group[i,"LoftIns"]] <- comb.group[i, "aagpd1213"]
}
i = 1
comb.group[i,"archcode"]
class(comb.group)
comb.group <- as.data.frame(comb.group)
class(comb.group)
comb.group[i,"archcode"]
comb.group[i,"wallinsy"]
comb.group[i,"winage"]
for (i in 1:nrow(comb.group)){
mda[comb.group[i,"archcode"], comb.group[i,"wallinsy"], comb.group[i,"winage"], comb.group[i,"arnatx"], comb.group[i,"LoftIns"]] <- comb.group[i, "aagpd1213"]
}
head(mda)
mda
foo <- mda[1,2]
foo <- mda[c(1,2)]
foo <- mda[1,1,1,1,1]
foo
foo <- mda[,,1,1,1]
View(foo)
sum(foo)
sum(foo, na.rm = T)
sum(foo, na.rm = T) / sum(comb.sub$aagpd1213)
sum(mda, na.rm = T) / sum(comb.sub$aagpd1213)
foo <- mda[1,,,,]
foo
mda <- array(data = NA,
dim = c(max(comb.group$archcode),
max(comb.group$wallinsy),
max(comb.group$winage),
max(comb.group$arnatx),
max(comb.group$LoftIns),
dimnames = list(archcodes,wallinsy,winage,arnatx,LoftIns)
))
list(archcodes,wallinsy,winage,arnatx,LoftIns)
archcodes
mda <- array(data = NA,
dim = c(max(comb.group$archcode),
max(comb.group$wallinsy),
max(comb.group$winage),
max(comb.group$arnatx),
max(comb.group$LoftIns)#,
#dimnames = list(archcodes,wallinsy,winage,arnatx,LoftIns)
))
mda <- array(data = NA,
dim = c(max(comb.group$archcode),
max(comb.group$wallinsy),
max(comb.group$winage),
max(comb.group$arnatx),
max(comb.group$LoftIns)),
dimnames = list(archcodes,wallinsy,winage,arnatx,LoftIns)
)
for (i in 1:nrow(comb.group)){
mda[comb.group[i,"archcode"], comb.group[i,"wallinsy"], comb.group[i,"winage"], comb.group[i,"arnatx"], comb.group[i,"LoftIns"]] <- comb.group[i, "aagpd1213"]
}
sum(mda, na.rm = T) / sum(comb.sub$aagpd1213) == 1
foo <- mda[1,,,,]
foo
View(comb.group)
unique(comb$arnatx)
unique(comb$LoftIns)
unique(comb$wallinsy)
retro.ops <- read.csv("../jobs_data/retrofit_options_library.csv")
library(dplyr)
arch <- readRDS("../jobs_data/archetype_summary_retrofitopts.Rds")
comb <- readRDS("../jobs_data/combined_2013_arch.Rds")
retro.ops <- read.csv("../jobs_data/retrofit_options_library.csv")
comb.sub <- comb[comb$archcode %in% arch$archcode[1:144],] #Only take the top 80% or archetypes
sum(comb.sub$aagpd1213) / sum(comb$aagpd1213)
comb.sub <- comb.sub[,c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")]
comb.group <- comb.sub %>% group_by(archcode,wallinsy,winage,arnatx,LoftIns) %>% summarise(sum(aagpd1213))
sum(comb.group$`sum(aagpd1213)`) == sum(comb.sub$aagpd1213)
comb.group <- as.data.frame(comb.group)
names(comb.group) <- c("archcode","wallinsy","winage","arnatx","LoftIns","aagpd1213")
View(comb.group)
retro.ops <- read.csv("../jobs_data/retrofit_options_library.csv", stringsAsFactors = F)
View(arch)
View(retro.ops)
ropt$wall <- strsplit(gsub(" ","",ropt$wall), ",")
ropt$floor <- strsplit(gsub(" ","",ropt$floor), ",")
ropt$roof <- strsplit(gsub(" ","",ropt$roof), ",")
retro.ops$wall <- strsplit(gsub(" ","",retro.ops$wall), ",")
retro.ops$floor <- strsplit(gsub(" ","",retro.ops$floor), ",")
retro.ops$roof <- strsplit(gsub(" ","",retro.ops$roof), ",")
retro.ops$solar <- strsplit(gsub(" ","",retro.ops$solar), ",")
retro.ops$window <- strsplit(gsub(" ","",retro.ops$window), ",")
retro.ops$energy <- strsplit(gsub(" ","",retro.ops$energy), ",")
retro.ops$type <- strsplit(gsub(" ","",retro.ops$type), ",")
names(retro.ops)
retro.ops$winage <- strsplit(retro.ops$winage, ",")
retro.ops$arnatx <- strsplit(retro.ops$arnatx, ",")
retro.ops$LoftIns <- strsplit(retro.ops$LoftIns, ",")
retro.ops$wallinsy <- strsplit(retro.ops$wallinsy, ",")
arch <- read.csv("data/archetype_summary.csv", stringsAsFactors = F)
arch <- read.csv("../jobs_data/archetype_summary.csv", stringsAsFactors = F)
View(arch)
combined_2013 <- readRDS("../jobs_data/combined_2013_base.Rds")
View(combined_2013)
source('D:/Users/earmmor/GitHub/glider/jobs_code/add_archetypes.R', echo=TRUE)
arch <- read.csv("../jobs_data/archetype_summary.csv", stringsAsFactors = F)
comb <- readRDS("../jobs_data/combined_2013_arch.Rds")
retro.ops <- read.csv("../jobs_data/retrofit_options_library.csv", stringsAsFactors = F)
View(comb)
